version: '3.4'

services:
  mysql:
    image: mysql:5.7
    container_name: mysql
    env_file:
      - .env
    environment:
      MYSQL_TCP_PORT: ${MYSQL_PORT}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
     - ./init:/docker-entrypoint-initdb.d/:ro
     - ./data:/var/lib/mysql
    restart: always
    networks:
      - my-proxy-net
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: ${MYSQL_PORT}
    ports:
      - 8090:80
    restart: unless-stopped
    networks:
      - my-proxy-net
  mysql-backup:
    image: databack/mysql-backup
    container_name: mysql-backup
    depends_on:
      - mysql
    env_file:
      - .env
    environment:
      DB_SERVER: mysql
      DB_PORT: ${MYSQL_PORT}
      DB_NAMES: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_ROOT_USER}
      DB_PASS: ${MYSQL_ROOT_PASSWORD}
      #DB_DUMP_TARGET: back up database to /db or aws S3
      DB_DUMP_TARGET: "/db ${AWS_S3_DESTINATION}"
      DB_DUMP_FREQ: 600
      DB_DUMP_BEGIN: '+5'
      DB_DUMP_SAFECHARS: no-colons
      DB_DUMP_DEBUG: 'true'
      #DB_RESTORE_TARGET: /db/db_backup_****-**-**T**-**-**Z.tgz
      # DB_RESTORE_TARGET: /db/db_backup_2023-01-12T06-17-33Z.tgz
    volumes:
      - ./backup/:/db
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
    networks:
      - my-proxy-net
  keycloak:
    build: ./
    ports:
      - "${KC_HOSTNAME_PORT}:8443"
    env_file:
      - .env
    environment:
      PROXY_ADDRESS_FORWARDING: "true"
      KC_DB_USERNAME: ${MYSQL_USER}
      KC_DB_PASSWORD: ${MYSQL_PASSWORD}
    command:
      - start
      - --optimized
    depends_on:
      - mysql
    restart: unless-stopped
    networks:
      - my-proxy-net
networks:
  my-proxy-net:
    name: custom_network
